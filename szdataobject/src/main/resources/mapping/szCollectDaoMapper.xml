<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sto.szdataobject.dao.szCollectDaoMapper">
  <resultMap id="BaseResultMap" type="com.sto.szdataobject.model.pojo.szCollectDao">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 11 23:24:58 CST 2020.
    -->
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="productName" jdbcType="VARCHAR" property="productname" />
    <result column="duty" jdbcType="VARCHAR" property="duty" />
    <result column="nameModel" jdbcType="VARCHAR" property="namemodel" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="priceAddress" jdbcType="VARCHAR" property="priceaddress" />
    <result column="englishProductName" jdbcType="VARCHAR" property="englishproductname" />
    <result column="allProductName" jdbcType="VARCHAR" property="allproductname" />
    <result column="fromCountry" jdbcType="VARCHAR" property="fromcountry" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="bizhi" jdbcType="VARCHAR" property="bizhi" />
  </resultMap>
  <insert id="insert" parameterType="com.sto.szdataobject.model.pojo.szCollectDao">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 11 23:24:58 CST 2020.
    -->
    insert into szcollect (id, brand, productName, 
      duty, nameModel, number, 
      weight, priceAddress, englishProductName, 
      allProductName, fromCountry, unit, 
      bizhi)
    values (#{id,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
      #{duty,jdbcType=VARCHAR}, #{namemodel,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{weight,jdbcType=VARCHAR}, #{priceaddress,jdbcType=VARCHAR}, #{englishproductname,jdbcType=VARCHAR}, 
      #{allproductname,jdbcType=VARCHAR}, #{fromcountry,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{bizhi,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sto.szdataobject.model.pojo.szCollectDao">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 11 23:24:58 CST 2020.
    -->
    insert into szcollect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="productname != null">
        productName,
      </if>
      <if test="duty != null">
        duty,
      </if>
      <if test="namemodel != null">
        nameModel,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="priceaddress != null">
        priceAddress,
      </if>
      <if test="englishproductname != null">
        englishProductName,
      </if>
      <if test="allproductname != null">
        allProductName,
      </if>
      <if test="fromcountry != null">
        fromCountry,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="bizhi != null">
        bizhi,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="productname != null">
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="duty != null">
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="namemodel != null">
        #{namemodel,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="priceaddress != null">
        #{priceaddress,jdbcType=VARCHAR},
      </if>
      <if test="englishproductname != null">
        #{englishproductname,jdbcType=VARCHAR},
      </if>
      <if test="allproductname != null">
        #{allproductname,jdbcType=VARCHAR},
      </if>
      <if test="fromcountry != null">
        #{fromcountry,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="bizhi != null">
        #{bizhi,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectInfoByBrand" parameterType="java.lang.String" resultType="com.sto.szdataobject.model.pojo.szCollectDao">
      select * from szcollect where  brand like '%' #{brand} '%'
      <if test="productName != null">
        and productName like '%' #{productName} '%'
      </if>
      <if test="number != null">
        and number  = #{number}
      </if>
      <if test="nameModel != null">
        and nameModel = #{nameModel}
      </if>
      <if test="weight != null">
        and weight = #{weight}
      </if>
  </select>

  <select id="selectInfoByProductName" parameterType="java.lang.String" resultType="com.sto.szdataobject.model.pojo.szCollectDao">
      select * from szcollect where  brand like '%' #{brand} '%' and productName = #{productName} and number  = #{number} and nameModel = #{nameModel} and weight = #{weight}
  </select>

  <select id="selectInfoByOrBrand" parameterType="java.lang.String" resultType="com.sto.szdataobject.model.pojo.szCollectDao">
       select * from szcollect where  brand =  #{brand}  and productName = #{productName} and number  = #{number} and nameModel = #{nameModel} and weight = #{weight}
  </select>

  <select id="selectInfoByIk" parameterType="java.util.HashMap" resultType="com.sto.szdataobject.model.pojo.szCollectDao">
        select * from  szcollect
        where  brand = #{brand} and number = #{number} and nameModel = #{nameModel}
      and
        <foreach collection="iks" item="item" index="index" open="(" separator="or" close=")">
          productName like  '%'  #{item} '%'
        </foreach>
  </select>

</mapper>